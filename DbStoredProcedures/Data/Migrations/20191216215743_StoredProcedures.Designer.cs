// <auto-generated />
using System;
using DbStoredProcedures.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DbStoredProcedures.Data.Migrations
{
    [DbContext(typeof(IssueTrackerContext))]
    [Migration("20191216215743_StoredProcedures")]
    partial class StoredProcedures
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DbStoredProcedures.Data.Issue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<int>("OperatingSystemFk")
                        .HasColumnType("int");

                    b.Property<string>("Problem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductFk")
                        .HasColumnType("int");

                    b.Property<string>("Resolution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResolutionDate")
                        .HasColumnType("datetime");

                    b.Property<int>("StatusFk")
                        .HasColumnType("int");

                    b.Property<int>("VersionFk")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("StatusFk");

                    b.HasIndex("ProductFk", "VersionFk", "OperatingSystemFk")
                        .HasName("IX_Issue_ProductVersionOs");

                    b.ToTable("Issue");
                });

            modelBuilder.Entity("DbStoredProcedures.Data.IssueStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("IssueStatus");
                });

            modelBuilder.Entity("DbStoredProcedures.Data.OperatingSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("OperatingSystem");
                });

            modelBuilder.Entity("DbStoredProcedures.Data.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("DbStoredProcedures.Data.ProductVersionOs", b =>
                {
                    b.Property<int>("ProductFk")
                        .HasColumnType("int");

                    b.Property<int>("VersionFk")
                        .HasColumnType("int");

                    b.Property<int>("OperatingSystemFk")
                        .HasColumnType("int");

                    b.HasKey("ProductFk", "VersionFk", "OperatingSystemFk");

                    b.HasIndex("OperatingSystemFk");

                    b.HasIndex("VersionFk");

                    b.ToTable("ProductVersionOs");
                });

            modelBuilder.Entity("DbStoredProcedures.Data.Version", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("VersionName")
                        .IsRequired()
                        .HasColumnName("Version")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Version");
                });

            modelBuilder.Entity("DbStoredProcedures.Data.Issue", b =>
                {
                    b.HasOne("DbStoredProcedures.Data.IssueStatus", "StatusFkNavigation")
                        .WithMany("Issue")
                        .HasForeignKey("StatusFk")
                        .HasConstraintName("FK_Issue_Status_StatusFk")
                        .IsRequired();

                    b.HasOne("DbStoredProcedures.Data.ProductVersionOs", "ProductVersionOs")
                        .WithMany("Issue")
                        .HasForeignKey("ProductFk", "VersionFk", "OperatingSystemFk")
                        .HasConstraintName("FK_Issue_ProductVersionOs")
                        .IsRequired();
                });

            modelBuilder.Entity("DbStoredProcedures.Data.ProductVersionOs", b =>
                {
                    b.HasOne("DbStoredProcedures.Data.OperatingSystem", "OperatingSystemFkNavigation")
                        .WithMany("ProductVersionOs")
                        .HasForeignKey("OperatingSystemFk")
                        .IsRequired();

                    b.HasOne("DbStoredProcedures.Data.Product", "ProductFkNavigation")
                        .WithMany("ProductVersionOs")
                        .HasForeignKey("ProductFk")
                        .IsRequired();

                    b.HasOne("DbStoredProcedures.Data.Version", "VersionFkNavigation")
                        .WithMany("ProductVersionOs")
                        .HasForeignKey("VersionFk")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
